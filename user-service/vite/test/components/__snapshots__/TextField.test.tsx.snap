// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`TextField component > render controlled and change its value 1`] = `
<div>
  <div>
    <label
      class="block mb-1 font-medium"
      for="name_1234"
    >
      Name
    </label>
    <input
      class="w-full py-2 px-3 rounded border shadow text-gray-700 outline-none focus:border-blue-400"
      id="name_1234"
      name="name"
      value="foo"
    />
  </div>
</div>
`;

exports[`TextField component > render with required props 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div>
        <label
          class="block mb-1 font-medium"
          for="name_1234"
        >
          Name
        </label>
        <input
          class="w-full py-2 px-3 rounded border shadow text-gray-700 outline-none focus:border-blue-400"
          id="name_1234"
          name="name"
          value=""
        />
      </div>
    </div>
  </body>,
  "container": <div>
    <div>
      <label
        class="block mb-1 font-medium"
        for="name_1234"
      >
        Name
      </label>
      <input
        class="w-full py-2 px-3 rounded border shadow text-gray-700 outline-none focus:border-blue-400"
        id="name_1234"
        name="name"
        value=""
      />
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TextField component > render with type password and all other props 1`] = `
<div>
  <div
    class="w-full"
  >
    <label
      class="block mb-1 font-medium"
      for="name_1234"
    >
      Name
    </label>
    <input
      class="w-full py-2 px-3 rounded border shadow text-gray-700 outline-none focus:border-blue-400 border-red-600"
      id="name_1234"
      name="name"
      placeholder="Dawid"
      type="password"
      value="Dawid"
    />
    <span
      class="block text-xs text-red-600 "
    >
      Invalid value
    </span>
  </div>
</div>
`;

exports[`TextField component > render with type text and all other props 1`] = `
<div>
  <div
    class="w-full"
  >
    <label
      class="block mb-1 font-medium"
      for="name_1234"
    >
      Name
    </label>
    <input
      class="w-full py-2 px-3 rounded border shadow text-gray-700 outline-none focus:border-blue-400 border-red-600"
      id="name_1234"
      name="name"
      placeholder="Dawid"
      type="text"
      value="Dawid"
    />
    <span
      class="block text-xs text-red-600 "
    >
      Invalid value
    </span>
  </div>
</div>
`;
